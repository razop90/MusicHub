@model MainViewModel
@using Newtonsoft.Json;

@using MusicHub.Models.HomeViewModels

@{
    ViewData["Title"] = "Home Page";
}

<style>
    .highlight-title {
        font-size: 30px;
        color: darkcyan;
        line-height: 1;
        text-shadow: 1px 1px 2px black, 0 0 25px blue, 0 0 5px darkblue;
        text-align: center;
    }

    .highlight-body {
        font-size: 16px;
        color: white;
        line-height: 1;
        text-align: center;
    }

    .highlight-button {
        background-color: #d51000;
        border: none;
        color: white;
        padding: 15px 32px;
        text-align: center;
        text-decoration: none;
        font-size: 16px;
        margin: 4px 2px;
        cursor: pointer;
        vertical-align: bottom;
        margin: 0 auto;
        display: inline-block;
        margin: 0 auto;
    }

    /*layout*/
    #main-wrap {
        overflow: hidden;
        background-color: #010030;
    }

    #carousel-caption {
        vertical-align: bottom;
        margin-bottom: -10px;
    }

    .highlight-wrapper {
        width: 100%;
    }

        .highlight-wrapper:before, .highlight-wrapper:after {
            content: '';
            width: 100%;
            height: 250px;
            position: absolute;
            bottom: 0;
            background: rgba(0, 0, 0, 0.3);
        }

        .highlight-wrapper:before {
            left: 0;
        }

        .highlight-wrapper:after {
            right: 0;
        }

    #image {
        min-height: 240px;
        min-width: 200px;
    }
</style>


@* BELONGS TO RAZ - DO NOT REMOVE! ~thanx <3
    <style>
        /* divide multiple-columns with xxlarge font size*/
        #song_details_container {
            column-count: 2;
        }

        /*#youtube_container_div {
            float: left;
            margin: 20px;
        }

        #frame {
            display: none;
        }

        #youtube_img {
            float: left;
            width: 120px;
            height: 90px;
            cursor: pointer;
        }*/
    </style>

    @*<head>
        <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.3.1/jquery.min.js"></script>
        <script>
            var youtube_url = @Html.Raw(JsonConvert.SerializeObject(Model.YouTubeUrl));

            $('#frame').ready(function ()
            {
                var iframe = document.getElementById('frame')
                var youtube_video_id = youtube_url.match(/youtube\.com.*(\?v=|\/embed\/)(.{11})/).pop();

                if (youtube_video_id.length >=5)
               {
                    var video_thumbnail = $('<img id="youtube_img" src="http://img.youtube.com/vi/' + youtube_video_id + '/maxresdefault.jpg">');
                    $('#youtube_container_div').append(video_thumbnail);

                    $('#youtube_img').click(function () {
                        iframe.fadeToggle('400');
                    });
                }
            });
        </script>
    </head>*@


<div id="myCarousel" class="carousel slide" data-ride="carousel" data-interval="6000">
    @*checking if there are highlights*@
    @{if (Model.Highlights != null)
        {
            <div>
                <ol class="carousel-indicators">
                    @*looping on all highlights and add bolets for each item for the home page songs-display control
                        set the first item to be the active one (the first focused item)*@
                    @for (int i = 0; i < Model.Highlights.Count; i++)
                    {
                        if (i == 0)
                        {
                            <li data-target="#myCarousel" data-slide-to="0" class="active"></li>
                        }
                        else
                        {
                            <li data-target="#myCarousel" data-slide-to="@i"></li>
                        }
                    }
                </ol>
                <div class="carousel-inner" role="listbox">
                    @{
                        //looping on all highligts and add their data in a listbox
                        //set the first item to be the active one (the first focused item) 
                        for (int i = 0; i < Model.Highlights.Count; i++)
                        {
                            var highlight = Model.Highlights[i];
                            string cla = i == 0 ? "item active" : "item";

                            <div id="main-wrap" class="@cla">
                                <img id="image" src="http://img.youtube.com/vi/@highlight.YoutubeId/maxresdefault.jpg" class="img-responsive" />

                                <div class="highlight-wrapper">
                                    <div class="carousel-caption" role="option">
                                        <h1 class="highlight-title">
                                            <br>@highlight.Title
                                        </h1>

                                        <div class="highlight-body">
                                            <p>@highlight.Body</p>
                                        </div>

                                        <a class="highlight-button" href="https://www.youtube.com/watch?v=@highlight.YoutubeId">
                                            @highlight.ButtonContent
                                        </a>

                                        @*empty space*@
                                        <br />
                                        <br />
                                    </div>
                                </div>
                            </div>
                        }
                    }
                </div>
            </div>
            <a class="left carousel-control" href="#myCarousel" role="button" data-slide="prev">
                <span class="glyphicon glyphicon-chevron-left" aria-hidden="true"></span>
                <span class="sr-only">Previous</span>
            </a>
            <a class="right carousel-control" href="#myCarousel" role="button" data-slide="next">
                <span class="glyphicon glyphicon-chevron-right" aria-hidden="true"></span>
                <span class="sr-only">Next</span>
            </a>
        }
    }
</div>